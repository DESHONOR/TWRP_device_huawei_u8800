on early-init
    start ueventd

on init
    export PATH /sbin
    export LD_LIBRARY_PATH .:/sbin
    export ANDROID_ROOT /system
    export ANDROID_DATA /data
    export EXTERNAL_STORAGE /sdcard

    symlink /system/etc /etc

    mkdir /boot
    mkdir /sdcard
    mkdir /sd-ext
    mkdir /datadata
    mkdir /cust
    mkdir /emmc
    mkdir /system
    mkdir /data
    mkdir /cache
    mount /tmp /tmp tmpfs

# Always start adbd on userdebug and eng builds
    write /sys/class/android_usb/android0/enable 0
    write /sys/class/android_usb/android0/idVendor 12d1
    write /sys/class/android_usb/android0/idProduct 1038
    write /sys/class/android_usb/android0/f_mass_storage/cdrom_index none
    write /sys/class/android_usb/android0/f_mass_storage/nluns 2
    write /sys/class/android_usb/android0/functions mass_storage,adb

on boot
    
    ifup lo
    hostname localhost
    domainname localdomain

    class_start default

    write /sys/devices/system/cpu/cpu0/cpufreq/scaling_governor "ondemand"

service rmt_storage /sbin/rmt_storage
    user root

service ueventd /sbin/ueventd
    critical

service recovery /sbin/recovery
    oneshot

service adbd /sbin/adbd recovery
    disabled
   
#start adbd
on property:ro.debuggable=1
    setprop service.adb.root 1

# Restart adbd so it can run as root
on property:service.adb.root=1
    write /sys/class/android_usb/android0/enable 0
    restart adbd
    write /sys/class/android_usb/android0/enable 1
